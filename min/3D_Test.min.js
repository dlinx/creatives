var gl,canvas,shaderProgram,vertexBuffer;window.onload=function(){function e(e){try{var r=e.getContext("webkit-3d");return r.viewportWidth=e.width,r.viewportHeight=e.height,r}catch(t){return console.log(t),null}}function r(e,r){var t=gl.createShader(e);return gl.shaderSource(t,r),gl.compileShader(t),gl.getShaderParameter(t,gl.COMPILE_STATUS)?t:(alert("Error compiling shader"+gl.getShaderInfoLog(t)),gl.deleteShader(t),null)}function t(){var e="attribute vec3 aVertexPosition;                 \nvoid main() {                                   \n  gl_Position = vec4(aVertexPosition, 1.0);     \n}                                               \n",t="precision mediump float;                    \nvoid main() {                               \n  gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);  \n}                                           \n",a=r(gl.VERTEX_SHADER,e),g=r(gl.FRAGMENT_SHADER,t);shaderProgram=gl.createProgram(),gl.attachShader(shaderProgram,a),gl.attachShader(shaderProgram,g),gl.linkProgram(shaderProgram),gl.getProgramParameter(shaderProgram,gl.LINK_STATUS)||alert("Failed to setup shaders"),gl.useProgram(shaderProgram),shaderProgram.vertexProgramAttribute=gl.getAttribLocation(shaderProgram,"aVertexPosition")}function a(){vertexBuffer=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,vertexBuffer);var e=[0,0,1,0,1,0,.5,0,0,2,0,1];gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(e),gl.STATIC_DRAW),vertexBuffer.itemSize=4,vertexBuffer.numberOfItems=3}function g(){gl.viewport(0,0,gl.viewportWidth,gl.viewportHeight),gl.clear(gl.COLOR_BUFFER_BIT),gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute,vertexBuffer.itemSize,gl.FLOAT,!1,0,0),gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute),gl.drawArrays(gl.TRIANGLES,0,vertexBuffer.numberOfItems)}function o(){canvas=document.getElementById("can"),gl=e(canvas),canvas.width=1300,canvas.height=700,t(),a(),gl.clearColor(0,0,0,.5),g()}document.getElementById("can").getContext("webkit-3d"),o()};